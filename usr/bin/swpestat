#!/bin/bash
# Script zur Aktivierung/Deaktivierung von invis Portaleintraegen
# (C) 2009,2013 invis-server.org
# Author: Stefan Schäfer <stefan@invis-server.org>
# License: GPLv3

#Konfigurationsdaten
conffile="/etc/invis/invis.conf"
passfile="/etc/invis/invis-pws.conf"

# Funktionen
# Werte aus Konfigurationsdatendatei extrahieren
# $1 = Konfigurationsdatei, $2 = Parameter, $3 Wert (Feld)
getconfdata() {
    cat $1 |grep "$2" | cut -d ":" -f $3
}

# Konfigurationsparameter tauschen
changevalues() {
    # Arg1 = Pfad, Arg2 = Datei, Arg3 = sed String
    cat $1/$2|sed "s%$3%g" > $1/$2.new
    mv $1/$2.new $1/$2
}
# Aufrufparameter
if [[ -n $1 && -n $2 && $2 =~ [TRUE,FALSE] ]]; then
    search=$1
    active=$2
else
    echo -e "Usage: switchldapstatus entryname active"
    echo -e "Für \"active\" werden nur die Werte TRUE oder FALSE akzeptiert"
    exit
fi
# echo $uid $zsso

# Basis-Variablen
basedn=`getconfdata $conffile "baseDN" "2"`
binddn="uid=admin,$basedn"

bindpw=`getconfdata $passfile "MasterPW" "2"`
ldaphost=`getconfdata $conffile "ldapHost" "2"`

function lds { 
    ldapsearch -LLL -x -h $ldaphost -D $binddn -w $bindpw -b $1 $2
}
# IFS so aendern, dass die nachfolgende for-Schleife nur noch "newlines" als Listentrenner akzeptiert.
searchbase="ou=iPortal,ou=Informationen,$basedn"
filter="(&(iPortEntryName=$search)(objectclass=iPortEntry))"

# DN des zu aendernden iPortEntry Knotens 
ipedn="iPortEntryName=$search,$searchbase"

# Status aendern
line1="dn: $ipedn\n"
line2="changetype: modify\n"
line2="replace: iPortEntryActive\n"
line3="iPortEntryActive: $active\n"
line4="\n"
echo -e $line1$line2$line3$line4 |ldapmodify -x -h $ldaphost -D $binddn -w $bindpw 

# aktuellen Status ermitteln
isactive=`lds $searchbase $filter |grep "iPortEntryActive:"| cut -d " " -f2`
echo "Der Eintrag \"$search\" ist jetzt auf \"$isactive\" gesetzt"

